<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[DimasPrasetya.Web.Id]]></title>
  <link href="https://dimasprasetya.web.id/atom.xml" rel="self"/>
  <link href="https://dimasprasetya.web.id/"/>
  <updated>2015-11-13T00:11:17+07:00</updated>
  <id>https://dimasprasetya.web.id/</id>
  <author>
    <name><![CDATA[Dimas Prasetya]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Programming Language]]></title>
    <link href="https://dimasprasetya.web.id/blog/2015/11/06/programming-language/"/>
    <updated>2015-11-06T21:02:14+07:00</updated>
    <id>https://dimasprasetya.web.id/blog/2015/11/06/programming-language</id>
    <content type="html"><![CDATA[<p><em>Hello everyone</em>&hellip;.<br/>
<em>How are you ?</em></p>

<p>Kembali lagi bersama DimasPrasetya.Web.Id. Pada postingan sebelumnya, kita telah belajar mengenai <a href="https://dimasprasetya.web.id/blog/2015/10/15/computer-programming/" title="Computer Programming"><em>apa itu Computer Programming</em></a>, pengertian program komputer, programmer, dan lain-lain. Pada postingan kali ini, kita akan belajar lebih dalam mengenai bahasa pemrograman / <em>programming language</em>.</p>

<p>Pada postingan sebelumnya telah disinggung sedikit mengenai bahasa pemrograman.</p>

<blockquote><p><em>Apa sih yang dimaksud bahasa pemrograman / programming language itu ?</em></p></blockquote>

<!-- more -->


<p>Sebelum menjawab pertanyaan di atas, saya mengajak teman-teman untuk membayangkan. Hehe&hellip;</p>

<p>Bayangkan ketika kita yang belum bisa bahasa German dan saat itu juga berada di German. Pasti kita akan kesulitan berkomunikasi dengan orang-orang disana. Maka dari itu, kita perlu mengerti bahasa German atau paham dengan bahasa Internasional yang dapat dimengerti oleh orang Indonesia dan orang German.<br/>
Begitupun kita dengan kompie (komputer). Kita belum paham dengan bahasa si kompie. Dia berkomunikasi dengan bahasa yang tidak manusiawi, sedangkan kita menggunakan bahasa manusia. Untuk itu, kita perlu belajar bahasa yang bisa dimengerti oleh kita dan si kompie. Kalo kita sudah mengerti dengan bahasa si kompie, kita kan jadi mudah untuk berkomunikasi dan memberikan instruksi untuk melakukan fungsi tertentu. Nah, bahasa itulah yang disebut dengan bahasa pemrograman.</p>

<p>Bahasa pemrograman yang kita kenal antara lain Java, C, C#, C++, PHP, dan masih banyak lagi. Namun tentu saja kebutuhan bahasa ini harus disesuaikan dengan fungsi dan perangkat yang menggunakannya, seperti yang sudah saya jelaskan di <a href="https://dimasprasetya.web.id/blog/2015/10/15/computer-programming/" title="Computer Programming">postingan sebelumnya</a>.<br/>
Secara umum bahasa pemrograman terbagi menjadi 4 kelompok :</p>

<ol>
<li><p><em>Low Level Language</em> / Bahasa Tingkat Rendah<br/>
Bahasa pemrograman masuk tingkat ini karena bahasanya masih jauh dari bahasa manusia. Contoh : bahasa Assembly</p></li>
<li><p><em>Middle Level Language</em> / Bahasa Tingkat Menengah
Disebut tingkat menengah karena bisa masuk ke dalam bahasa tingkat tinggi maupun rendah. Contoh : bahasa C</p></li>
<li><p><em>High Level Language</em> / Bahasa Tingkat Tinggi
Bahasa pemrograman masuk tingkat ini karena bahasanya mendekati bahasa manusia. Contoh : bahasa Java, Visual Basic, PHP.</p></li>
<li><p><em>Object Oriented Language</em> / Bahasa Berorientasi Objek
Bahasa pemrograman masuk tingkat ini karena bahasanya menerapkan konsep <em>object oriented programming</em> / pemrograman berorientasikan objek. Contoh : Java, PHP.</p></li>
</ol>


<p>Program yang ditulis dengan bahasa pemrograman tingkat menengah, tinggi, maupun bahasa berorientasi objek sebenarnya tidak dimengerti oleh si kompie secara langsung, karena si kompie hanya mengenal bahasa khasnya saja yaitu bahasa mesin atau bahasa tingkat rendah. Agar program bisa dijalankan/dieksekusi oleh si kompie, program tersebut harus diterjemahkan dulu ke dalam bahasa mesin. Proses penerjemahan terdiri dari dua macam yaitu <strong>kompilasi</strong> dan <strong>interpretasi</strong>.</p>

<p><strong>Kompilasi (<em>Compilation</em>)</strong><br/>
Pada proses kompilasi, <strong>semua</strong> <em>source code</em> akan dibaca terlebih dahulu. Jika <em>source code</em> tidak ada kesalahan maka akan diterjemahkan menjadi kode objek/bahasa mesin, dan akan dijalankan/dieksekusi oleh si kompie. Program yang melakukan tugas ini disebut <strong>compiler</strong>. Program hasil kompilasi akan berbentuk <em>executable</em>, jadi kompiler tidak diperlukan lagi jika ingin menjalankan program tersebut.<br/>
Bahasa pemrograman yang menggunakan teknik kompilasi antara lain C++, C, pascal, dll.</p>

<p><strong>Interpretasi (<em>Interpretation</em>)</strong><br/>
Pada proses imterpretasi, <em>source code</em> akan dibaca <strong>per baris</strong>. Jika dalam satu baris <em>source code</em> tersebut tidak ada kesalahan, maka akan diterjemahkan menjadi kode objek/bahasa mesin , dan akan dieksekusi oleh kompie. Selanjutnya si kompie akan melanjutkan membaca <em>source code</em> baris selanjutnya dan akan dilakukan hal yang sama dengan baris pertama sampai <em>source code</em> baris terakhir.<br/>
Bahasa pemrograman yang menggunakan teknik interpretasi antara lain Python, Ruby, Perl, dll.</p>

<p><strong>Kompilasi sekaligus Interpretasi</strong><br/>
Ada juga bahasa pemrograman yang menghasilkan programnya dengan teknik kompilasi sekaligus interpretasi. Misalnya bahasa java. Dalam pembuatan program java kode sumber diubah menjadi bytecode. Meskipun nampak seperti bahasa mesin namun ini bukanlah bahasa mesin dan tidak executable. Untuk menjalankan bytecode tersebut kita membutuhkan Java Runtime Environment (JRE) yang bertugas sebagai interpreter sehingga menghasilkan program dari bytecode tersebut.</p>

<p><em>Finally</em>, gimana nih, udah lebih paham tentang bahasa pemrograman kan&hellip;.<br/>
Sekian untuk pembahasan kali ini. Pada kesempatan yang akan datang, kita akan belajar hal baru yang akan lebih menarik lagi. Jadi, tetap ikuti terus postingan DimasPrasetya.Web.Id.</p>

<p><em>Bye Bye</em>&hellip;. ^_^</p>

<hr />

<p><em>Daftar Pustaka :</em></p>

<ul>
<li><em>Abdul Kadir &amp; Heriyanto. 2005. Algoritma Pemrograman menggunakan C++. Yogyakarta: Andi.</em></li>
<li><em><a href="https://id.wikipedia.org/wiki/Bahasa_pemrograman#Proses_Pembuatan_Program" title="Bahasa Pemrograman">Bahasa Pemrograman</a> - Wikipedia</em></li>
</ul>


<hr />

<p>(<strong>NB</strong> : Sertakan link sumber jika ingin copas ^_^)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Computer Programming]]></title>
    <link href="https://dimasprasetya.web.id/blog/2015/10/15/computer-programming/"/>
    <updated>2015-10-15T15:45:25+07:00</updated>
    <id>https://dimasprasetya.web.id/blog/2015/10/15/computer-programming</id>
    <content type="html"><![CDATA[<p>Halo <em>everyone</em>&hellip;</p>

<p><em>Finally</em> bisa bikin postingan setelah sekian lama berkutat dengan <em>project</em> yang memakan waktu yang cukup lama dan mengakibatkan perkembangan blog ini tertunda. Dan sekarang karena projectnya sudah <em>DONE</em>, akan saya lanjutkan lagi untuk mengembangkan blog ini.  Yok&hellip;.!! Langsung saja kita mulai sharing materinya.</p>

<p>Pada postingan pertama ini, saya akan mulai dengan pengenalan <em>Computer Programming</em> / Pemrograman Komputer yang mana postingan ini merupakan <em>request</em> dari teman saya yang baru memasuki dunia pemrograman. Semoga postingan ini bisa memberikan pencerahan bagi yang membacanya. Aamiin&hellip;.. ^_^</p>

<p>Pada awalnya mungkin banyak dari kita bertanya-tanya,</p>

<blockquote><p><em>Apa itu <strong>computer programming</strong> ?</em></p></blockquote>

<!--more-->


<p><strong><em>Computer Programming</em></strong> atau biasa disebut <strong><em>programming</em></strong> / <strong><em>pemrograman</em></strong> adalah segala kegiatan yang berhubungan dengan pembuatan program komputer. ( Apa lagi&hellip;&hellip;itu program komputer ??? )</p>

<p><strong><em>Program Komputer</em></strong> adalah kumpulan instruksi untuk mengatur komputer agar melaksanakan tugas sesuai dengan yang dikehendaki oleh <em>user</em> / pemakai.</p>

<blockquote><p><em>Kalo programming itu berhubungan dengan pembuatan program komputer, terus siapa yang membuat program komputer ?</em></p></blockquote>

<p><em>Nice question</em>&hellip;<br/>
Nah yang bertugas untuk membuat program komputer disebut dengan <strong><em>Programmer</em></strong>. <em>Programmer</em> bertanggung jawab agar program yang dibuat sesuai dengan kebutuhan <em>user</em> dan bebas dari kesalahan. Seorang <em>programmer</em>
itu dituntut untuk memiliki kemampuan <em>problem solver</em> dan logika yang baik. Dan yang pasti <em>programmer</em> adalah pejuang yang tak kenal lelah dalam menyelesaikan masalah&hellip;. hehehehe</p>

<p>Kembali ke program komputer, program komputer dibedakan menjadi 2 macam :</p>

<ol>
<li><p>Program Sistem<br/>
Program Sistem merupakan program yang digunakan untuk mengontrol sumber daya yang ada pada komputer baik yang bersifat internal seperti RAM maupun bersifat eksternal seperti driver printer, modem, dll).<br/>
Contoh : Utility, Device Driver</p></li>
<li><p>Program Aplikasi<br/>
Program Aplikasi atau biasa disebut aplikasi saja merupakan program yang biasa dipakai user untuk melakukan tugas-tugas yang berkaitan dengan aktivitas pekerjaan. Misalnya untuk membuat dokumen, memanipulasi foto, memutar musik, dll.</p></li>
</ol>


<blockquote><p><em>Setelah mengetahui apa itu program komputer dan siapa yang membuatnya, terus bagaimana cara membuat program komputer itu ?</em></p></blockquote>

<p>Program komputer dibuat dalam bentuk kode atau biasa disebut <em>source code</em> dengan menggunakan <em>programming language</em> / bahasa pemrograman tertentu. Sekarang ini banyak bahasa pemrograman yang sudah dikembangkan sehingga para programmer dapat memilih bahasa mana yang sesuai dengan kebutuhan mereka. Contoh bahasa pemrograman antara lain Java, C, C#, C++, Go, Ruby, Phyton, dan masih banyak lagi.</p>

<p>Dalam mempelajari bahasa pemrograman kita haruslah fokus pada satu bahasa yang kita anggap itu paling cocok dengan kita. Pelajari sampai kita paham betul dengan bahasa pemrograman tersebut. Disini bahasa pemrograman saya ibaratkan sebagai alat untuk bertani. Seperti halnya bahasa pemrograman, alat bertani juga banyak macamnya. Ada cangkul, sabit, garu, traktor, dan lain-lain. Tinggal kita memilih alat mana yang akan kita gunakan. Setelah kita memilih, kita juga harus paham cara menggunakannya sampai detail dari alat tersebut sehingga kita bisa menggunakannya dengan maksimal. Dan jika sudah paham betul cara penggunaannya, maka pekerjaan yang kita kerjakan juga akan terasa mudah dan hasilnya juga sesuai dengan yang diinginkan. Begitulah pengibaratan dalam mempelajari bahasa pemrograman.</p>

<p>Nah&hellip;..sekarang udah paham kan apa yang dimaksud <em>computer programming</em> dan yang berkaitan dengannya. Mungkin kalo belum begitu paham, silakan tinggalkan jejak dengan memberikan komentar, pertanyaan, kritik, atau saran di bawah postingan ini yak. Atau kalau pengen eksplor sendiri dulu silakan tanyakan kepada <em>uncle Google</em>. Semua tentang computer programming pasti ada.</p>

<p>O iya ada kiat-kiat / metode yang bisa kita gunakan untuk mendalami <em>computer programming</em>. Saya biasanya menyebut metode tersebut dengan <strong>ATM-Lanjutkan!</strong>.</p>

<blockquote><p><em>Apa itu <strong>ATM-Lanjutkan!</strong> ?</em></p></blockquote>

<p><strong>A</strong> = <strong>Amati</strong><br/>
Maksud dari <strong>Amati</strong> yaitu kita bisa membaca teori dan algoritma yang ada di buku, melihat contoh-contoh program di internet, melihat contoh-contoh yang dibuat oleh para programmer di sekeliling kita, dan kita juga bisa mengikuti grup diskusi ataupun web/blog yang terkait dengan bidang yang kita senangi.</p>

<p><strong>T</strong> = <strong>Tiru</strong><br/>
Setelah kita mengamati, jangan segan untuk mempraktikkan contoh yang ada. Perhatikan hasil untuk setiap <em>code</em> dan pahami.</p>

<p><strong>M</strong> = <strong>Modif</strong><br/>
Sesudah kita mempraktikkan contoh yang ada, lakukan perubahan-perubahan pada <em>code</em> untuk mendapatkan hasil yang berbeda. Tujuannya adalah untuk meningkatkan kemampuan dalam memahami <em>code</em> dan merangkainya menjadi sesuatu yang berbeda.</p>

<p><strong>LANJUTKAN</strong><br/>
<strong>LA</strong>kukan percobaan-percobaa<strong>N</strong> lebih lanjut dengan semangat <strong>JU</strong>ang yang <strong>T</strong>inggi berdasarkan <strong>K</strong>reativitas  <strong>AN</strong>da sendiri <strong>!</strong></p>

<p>Ada satu video yang menurut saya sangat menarik dan membuat saya untuk terus mendalami <em>computer programming</em>. Berikut video nya :<br/>
<a href="https://www.youtube.com/watch?v=pvAsqPbz9Ro" title="Is Computer Programming hard to learn ?"><img src="http://img.youtube.com/vi/pvAsqPbz9Ro/0.jpg" alt="IMAGE ALT TEXT" /></a></p>

<p>Satu hal penting lagi, untuk menghadapi tantangan ke depan, keterampilan <em>programming</em> saja tidak cukup. Sambil memperdalam keterampilan <em>programming</em> kita juga harus mengembangkan <strong>7C</strong> :<br/>
1. <em>Computer Skill</em><br/>
2. <em>Communication Skill</em><br/>
3. <em>Creating Networks</em><br/>
4. <em>Collaboration Power</em><br/>
5. <em>Creative Thinking</em><br/>
6. <em>Creating Dreams</em><br/>
7. <em>Compromise with Situation</em></p>

<p>Sekian pembahasan materi pada posting yang pertama ini, semoga menjadikan pemahaman dan ilmunya bisa diterapkan. Nah jangan lupa ikuti terus perkembangan dan postingan blog ini. Di postingan selanjutnya saya akan membahas mengenai <em>programming</em> lebih dalam lagi. Jadi, sampai jumpa lagi di postingan berikutnya&hellip;.</p>

<p><em>Bye Bye&hellip;..</em></p>

<hr />

<p><em>Daftar Pustaka : Kadir, Abdul. 2013. Programming Is Fun - Realitas dan Tantangannya.pdf</em></p>

<hr />

<p>(<strong>NB</strong> : Sertakan link sumber jika ingin copas ^_^)</p>
]]></content>
  </entry>
  
</feed>
